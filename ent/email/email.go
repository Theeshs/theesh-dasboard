// Code generated by ent, DO NOT EDIT.

package email

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the email type in the database.
	Label = "email"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCallBackEmail holds the string denoting the call_back_email field in the database.
	FieldCallBackEmail = "call_back_email"
	// FieldMessage holds the string denoting the message field in the database.
	FieldMessage = "message"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSubject holds the string denoting the subject field in the database.
	FieldSubject = "subject"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the email in the database.
	Table = "emails"
)

// Columns holds all SQL columns for email fields.
var Columns = []string{
	FieldID,
	FieldCallBackEmail,
	FieldMessage,
	FieldName,
	FieldSubject,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Email queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCallBackEmail orders the results by the call_back_email field.
func ByCallBackEmail(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCallBackEmail, opts...).ToFunc()
}

// ByMessage orders the results by the message field.
func ByMessage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMessage, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// BySubject orders the results by the subject field.
func BySubject(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubject, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
